on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build linux-amd64
        id: build-linux-amd64
        uses: ./.github/actions/docker-build
        with:
          goarch: amd64
          goos: linux
          bin-name: linux-amd64
      - name: Build linux-arm
        id: build-linux-arm
        uses: ./.github/actions/docker-build
        with:
          goarch: arm
          goos: linux
          bin-name: linux-arm
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload linux-amd64
        id: upload-linux-amd64 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build-linux-amd64.outputs.artifact_path }}
          asset_name: mqcontrol_${{ github.ref }}_${{ steps.build-linux-amd64.inputs.goos }}_${{ steps.build-linux-amd64.inputs.goarch }}
          asset_content_type: application/octet-stream
      - name: Upload linux-arm
        id: upload-linux-arm 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build-linux-arm.outputs.artifact_path }}
          asset_name: mqcontrol_${{ github.ref }}_${{ steps.build-linux-arm.inputs.goos }}_${{ steps.build-linux-arm.inputs.goarch }}
          asset_content_type: application/octet-stream